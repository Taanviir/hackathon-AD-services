services:
  # Database service (PostgreSQL)
  db:
    image: postgres:16-alpine
    container_name: app-db
    restart: on-failure
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  # Backend service (Django)
  app-backend:
    build: ./containers/backend
    image: app-backend
    container_name: app-backend
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./backend:/app/backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 15s
      timeout: 15s
      retries: 5
    ports:
      - "8000:8000"

  # Frontend service (React)
  # app-frontend:
  #   build:
  #     context: .
  #     dockerfile: ./containers/frontend/Dockerfile
  #   image: app-frontend
  #   container_name: app-frontend
  #   restart: always
  #   depends_on:
  #     app-backend:
  #       condition: service_healthy
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./containers/frontend/app.conf:/etc/nginx/conf.d/app.conf
  #   networks:
  #     - app-network

  # Cache service (Redis)
  redis:
    container_name: redis
    image: redis:6-alpine
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

# Volumes to persist PostgreSQL data
volumes:
  db_data:
    name: db_data
  redis_data:
    name: redis_data


networks:
  app-network:
    name: app-network
    driver: bridge
